let allProjects = [];

const projects = [
  {
    title: "EEG Emotion Detection",
    image: "assets/projects/emotion.png",
    description:
      "ChronoNet model classifying DEAP EEG signals with 95% accuracy.",
    link: "https://github.com/devparikh0506/EEG_Emotion_Detection?tab=readme-ov-file#emotion-detection-using-deap-dataset",
    tags: ["ai"],
    icons: ["fas fa-brain", "fas fa-wave-square", "fab fa-python"],
  },
  {
    title: "Cancer Detection using CNN",
    image: "assets/projects/cancer.png",
    description:
      "CNN model for histopathology image classification using Kaggle dataset.",
    link: "https://github.com/devparikh0506/DATA_690_Deep_Learning/blob/main/project_2/cancer_detection_using_cnn.ipynb",
    tags: ["ai"],
    icons: ["fas fa-dna", "fas fa-microscope", "fab fa-python"],
  },
  {
    title: "Real-Time Face Detection",
    image: "assets/projects/facedetect.png",
    description:
      "Face detection system using OpenCV Haar Cascades and webcam feed.",
    link: "https://github.com/devparikh0506/face-detection?tab=readme-ov-file#real-time-face-detection",
    tags: ["ai", "cv"],
    icons: ["fas fa-video", "fas fa-eye", "fab fa-python"],
  },
  {
    title: "Soccer Player Valuation",
    image: "assets/projects/soccer.png",
    description:
      "ML model predicting transfer values using ensemble and neural models.",
    link: "https://github.com/devparikh0506/soccer_master?tab=readme-ov-file#soccer-master-project",
    tags: ["ai"],
    icons: ["fab fa-python", "fas fa-brain"],
  },
  {
    title: "Travel Mitra â€“ AI Chatbot for Airbnb",
    image: "assets/projects/travel_mitra.png",
    description:
      "A LangChain-based conversational AI assistant for Airbnb listings, enabling multi-turn queries, dynamic filtering, and follow-up question handling with LLMs.",
    link: "https://github.com/devparikh0506/travel_mitra?tab=readme-ov-file#travel-mitra",
    tags: ["AI", "Chatbot", "LangChain"],
    icons: ["fas fa-robot", "fab fa-node-js", "fas fa-database"],
  },
  {
    title: "Volz Website",
    image: "assets/projects/volz.png",
    description:
      "Corporate site built with Gatsby frontend and Sanity backend CMS.",
    link: "https://volz.ua",
    tags: ["web"],
    icons: ["fab fa-react", "fas fa-database"],
  },
  {
    title: "UAS Risk Analysis",
    description:
      "Big data risk profiling for unmanned aerial systems using FAA and OpenSky data.",
    image: "assets/projects/uas.png",
    tags: ["data_anlaysis"],
    icons: ["fab fa-aws", "fas fa-cloud", "fab fa-python"],
    link: "https://github.com/devparikh0506/uas-risk-analysis",
  },
  {
    title: "LAPD Crime Analysis",
    description:
      "Analyzed trends and hotspots using crime datasets for public safety insights.",
    image: "assets/projects/lapd.png",
    tags: ["data_anlaysis"],
    icons: ["fas fa-map-marker-alt", "fas fa-chart-line", "fab fa-python"],
    link: "https://github.com/devparikh0506/DATA-601/blob/main/project-1/crime/crime-eda.ipynb",
  },
  {
    title: "Airline Performance Analysis",
    description:
      "Exploratory and predictive analysis of delays, routes, and airline performance.",
    image: "assets/projects/airline.png",
    tags: ["data_anlaysis"],
    icons: ["fas fa-plane", "fas fa-database", "fab fa-python"],
    link: "https://github.com/devparikh0506/DATA-601/blob/main/final-project/601_Final_Project.ipynb",
  },
  {
    title: "E Learning Platform",
    description:
      "Built a full-stack educational app with student dashboards, video content, and assessments.",
    image: "assets/projects/elearning.png",
    tags: ["web", "ai"],
    icons: ["fab fa-react", "fab fa-node", "fas fa-chalkboard-teacher"],
    link: "https://www.futuresavvy.co.uk",
  },
];

async function loadProjects() {
  renderProjects(projects);
  setupFiltering(); // Setup filtering after rendering
}

function renderProjects(projects) {
  const container = document.getElementById("project-grid");
  container.innerHTML = "";

  projects.forEach((project) => {
    const tagList = project.tags.join(" ");
    const iconList = project.icons
      .map((icon) => `<i class="${icon}"></i>`)
      .join("\n");
    const isWebsite =
      project.link.includes("http") && !project.link.includes("github");

    const card = document.createElement("div");
    card.className = "project-card";
    card.setAttribute("data-category", tagList);
    card.setAttribute("data-aos", "fade-up");
    card.setAttribute("data-aos-delay", "100");
    card.innerHTML = `
        <div class="bg-white/5 backdrop-blur-lg border border-zinc-700 rounded-2xl overflow-hidden shadow-md hover:shadow-xl transition-transform duration-500 hover:-translate-y-1">
          <img src="${project.image}" alt="${
      project.title
    }" class="w-full h-48 object-cover" />
          <div class="p-6">
            <h3 class="text-xl font-semibold mb-2">${project.title}</h3>
            <p class="text-sm text-zinc-300 mb-4">${project.description}</p>
            <div class="flex justify-between items-center">
              <div class="flex space-x-4 text-lg text-blue-400">${iconList}</div>
              <a href="${
                project.link
              }" target="_blank" class="text-sm text-blue-400 hover:text-blue-300 flex items-center">
                <i class="${
                  isWebsite ? "fas fa-link" : "fab fa-github"
                } mr-1"></i>${isWebsite ? "Website" : "GitHub"}
              </a>
            </div>
          </div>
        </div>`;
    container.appendChild(card);
  });
}

function setupFiltering() {
  const filterButtons = document.querySelectorAll(".filter-btn");

  filterButtons.forEach((button) => {
    button.addEventListener("click", () => {
      const category = button.getAttribute("data-category");
      filterProjects(category);

      filterButtons.forEach((btn) => {
        btn.classList.remove("active", "bg-blue-600");
        btn.classList.add("bg-zinc-800");
      });

      button.classList.add("active", "bg-blue-600");
      button.classList.remove("bg-zinc-800");
    });
  });

  // Default to show all
  filterProjects("all");
}

function filterProjects(category) {
  const cards = document.querySelectorAll(".project-card");
  cards.forEach((card) => {
    const matches =
      category === "all" || card.dataset.category.includes(category);
    card.style.display = matches ? "block" : "none";
  });
}

document.addEventListener("DOMContentLoaded", function () {
  // Swiper carousel
  new Swiper(".swiper-container", {
    slidesPerView: 1,
    spaceBetween: 20,
    loop: true,
    autoplay: {
      delay: 4000,
    },
    breakpoints: {
      640: {
        slidesPerView: 1,
      },
      768: {
        slidesPerView: 2,
      },
      1024: {
        slidesPerView: 3,
      },
    },
  });
  loadProjects();
});

try {
  const menuBtn = document.getElementById("menu-btn");
  const sidebar = document.getElementById("sidebar");
  const overlay = document.getElementById("sidebar-overlay");
  const closeBtn = document.getElementById("close-sidebar");

  function openSidebar() {
    sidebar.classList.remove("-translate-x-full");
    overlay.classList.remove("hidden");
    document.body.classList.add("overflow-hidden");
  }

  function closeSidebar() {
    sidebar.classList.add("-translate-x-full");
    overlay.classList.add("hidden");
    document.body.classList.remove("overflow-hidden");
  }

  menuBtn.addEventListener("click", openSidebar);
  closeBtn.addEventListener("click", closeSidebar);
  overlay.addEventListener("click", closeSidebar);

  // Close on nav link click (for single-page UX)
  document.querySelectorAll("#sidebar a").forEach((link) => {
    link.addEventListener("click", closeSidebar);
  });
} catch (err) {
  console.error(err);
}
